<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Metrics Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
            text-align: center;
        }

        .container {
            width: 80%;
            margin: 20px auto;
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        h1 {
            color: #444;
            font-size: 24px;
            font-weight: bold;
        }

        canvas {
            width: 100%;
            max-width: 800px;
            margin: 20px auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Metrics Graph</h1>
        <canvas id="metricsChart"></canvas>
    </div>
    <script>
        async function fetchMetrics() {
            const response = await fetch('/api/metrics');
            return response.json();
        }

        fetchMetrics().then(metricsByUrl => {
            const ctx = document.getElementById('metricsChart').getContext('2d');
            const urls = Object.keys(metricsByUrl);
            const fcpData = urls.map(url => metricsByUrl[url].map(m => m.fcp).slice(-1)[0]); // 최근 FCP
            const lcpData = urls.map(url => metricsByUrl[url].map(m => m.lcp).slice(-1)[0]); // 최근 LCP
            const fmpData = urls.map(url => metricsByUrl[url].map(m => m.fmp).slice(-1)[0]); // 최근 FMP

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: urls,
                    datasets: [
                        {
                            label: 'FCP',
                            data: fcpData,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'LCP',
                            data: lcpData,
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'FMP',
                            data: fmpData,
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
